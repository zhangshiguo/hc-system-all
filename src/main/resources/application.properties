############################################################
# 生产与开发环境配置 dev prod
############################################################
#spring.profiles.active=dev
#spring.profiles.active=prod

############################################################
# Server 服务端相关配置 端口 上下文
############################################################
server.port=8080
# 配置context-path, 一般来说这个配置在正式发布的时候不配置
server.context-path=/hc-system
# session最大超时时间(分钟)，默认为30分钟
server.session-timeout=30

############################################################
# Server - tomcat 相关常用配置
############################################################
# tomcat最大线程数, 默认为200
#server.tomcat.max-threads=250
# tomcat的URI编码
server.tomcat.uri-encoding=UTF-8
# 存放Tomcat的日志、Dump等文件的临时文件夹，默认为系统的tmp文件夹
#（如：C:\Users\Shanhy\AppData\Local\Temp）
#server.tomcat.basedir=E:/intellij-hc/demo/hc-system-all/log
# 打开Tomcat的Access日志，并可以设置日志格式的方法：
#server.tomcat.access-log-enabled=true
#server.tomcat.access-log-pattern=
#server.tomcat.access-log-pattern=%t %a "%r" %s %S (%D ms)
#server.tomcat.accesslog.prefix=log
# accesslog目录，默认在basedir/logs
#server.tomcat.accesslog.directory=${server.tomcat.basedir}/tomcat_access_log
# 日志文件目录
#logging.path=E:/intellij-hc/demo/hc-system-all/log
# 日志文件名称，默认为spring.log
#logging.file=my.log

############################################################
# jdbc 配置 使用Druid连接池
############################################################
## 数据库访问配置
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.0.199:3306/demo?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=zsg
spring.datasource.password=Zsg_6543210

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

############################################################
# mybatis 配置 注意驼峰命名
############################################################
#mybatis
mybatis.config-location=classpath:mybatis-config.xml
#指定bean所在包
mybatis.type-aliases-package=com.hc.system.entity
#指定映射文件
mybatis.mapperLocations=classpath:mapper/*.xml

#mapper
#mappers 多个接口时逗号隔开
mapper.mappers=com.hc.system.util.IMapper
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

############################################################
# devtools 配置 开启关闭热部署 true false
############################################################
spring.devtools.restart.enabled=true

############################################################
# swagger 配置 true false
############################################################
swagger.show=true

############################################################
# REDIS 配置 没有服务器时启动不报错
############################################################
# Redis数据库索引（默认为0）
#spring.redis.database=1
# Redis服务器地址
spring.redis.host=192.168.0.108
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=1000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=2
# 连接超时时间（毫秒）
spring.redis.timeout=0

############################################################
# 上传文件地址 配置
############################################################
spring.http.multipart.location=E:/intellij-hc/upload
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/, classpath:/static/, classpath:/public/, file:${spring.http.multipart.location}